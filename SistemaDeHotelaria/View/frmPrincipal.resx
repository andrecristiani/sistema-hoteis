<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        4QAAAOEBcBgcLgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAM8SURBVFhHvZW9
        T1NRGMbvpoMmuukfQYwmLkTbRiDxQlta7i01lMunfEhFGBycnEwcjIODqU4mzg4MOuikTCQyoCyGOEiI
        CchCSzv08/U8p73t6emrAr21yS859/14nrfnnnuvQURHYyJyLj8Telicj26Wkna6vBgr0FK8ArBGDDnU
        oJbVYGCDKoWp4KXiXORrZSlOtHzrSKAWPejlNFXYoGQhcEaIrB7HWKc2yCq0WA8BGyxMhy+XFqwMJ3oS
        oAVNzqslUJrsD1buDZc5oXaAJrR1v6YLTCkOVIkT8AJo6zvRGGAqfLactHNco5dID+HVMkBhNvJRL36W
        SFDSdui25ZAz5FA86lAk4pAZdqgnNEbXglWwRgw51KAWPeiFhq4rvZoGmBns5k77jZBDV/rH2gIauq70
        Ep71AYrzkU29CHRqACA95QAjA+fFCa1wRZ0cQHoKbyM/O/iYKwBj1igrehygwWkDeIvtj37hkiAZqw7w
        9tUo5dcTTTx/0tgdrPU8epCDBqcN4G2Uk9YBlwTuAO9fC5ENcZoVXj5t7A7Weh49/xoA3kY20bedHekl
        ndxUmAo/vlNxf4+Ke9tU3BVrlV871RzAWs+jR+SgAS3OA95G2vYfCkgn/+6NOKT8r1QqUTqTpZ+7+xKs
        EfvTD1qch+CwZYD1oT4aHhona+4Bhafvkzm+TL0jd8k/PE/d0Rm6Gpqsb70OcqhBLXrQCw1oQRPaqpdA
        DrClBleiA6y4F0Bb9RJsGQcx/yc1uGJ1cAChrXrB28jYgRdqcCXSzzZ7AbRVL3jjFphq8H8OIDANMs1T
        YpFxg5/FQeGavQDarg884S0/Rmnbl3ITG6JoMhinO6EYpQbDngAtaEK7MYAvBW85QG7o+kURzCHxzeqh
        xZBNH6I3leL2gBY0oV2L5eBZH0DughV4pDZ1FOHl+tYHoInAabEta2yDp/jW4NU6gCAbC1zI2P4dvrF9
        oA0P1bNpAJCN+bo6MUTV3Nel+zVduGBKb2+Hb03/5y4tgTo4E9WDKZ+OE5KTB0655zpsUKX6iMr3RP1l
        dQRErS/lPmp/gw2yVN+YJt7ftQ8YvqL4lIMtxGrfFRO1rEYLZPwGR1sFz5ceoCgAAAAASUVORK5CYII=
</value>
  </data>
</root>